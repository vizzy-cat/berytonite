name: Build and Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release Tag'
        required: true
      prerelease:
        description: 'Is this a pre-release? (true/false)'
        required: false
        default: 'false'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        compiler: [clang]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set compiler
      shell: bash
      run: |
        echo "CC=${{ matrix.compiler }}" >> $GITHUB_ENV

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=${{ env.CC }} -S .

    - name: Build
      run: cmake --build build --parallel

    - name: Prepare package
      shell: bash
      run: |
        mkdir -p package/lib package/include
        cp build/libberyton* package/lib/ 2>/dev/null || true
        cp -r include/beryton package/include/
        cp README.md LICENSE BUILD.md CHANGELOG.md package/
        zip -r berytonite-${{ runner.os }}.zip package

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: berytonite-${{ matrix.os }}
        path: berytonite-${{ matrix.os }}.zip
  
  release:
    name: Create Github Release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Flatten artifacts
      shell: bash
      run: |
        mkdir flat
        find artifacts -name '*.zip' -exec cp {} flat/ \;
    
    - name: Upload to Github Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.event.inputs.tag }}
        name: ${{ github.event.inputs.tag }}
        files: flat/*.zip
        prerelease: ${{ github.event.inputs.prerelease == 'true' }}

